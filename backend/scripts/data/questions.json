[
  {
    "question": "Co to jest hoisting w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Podnoszenie zmiennych na początek zakresu",
        "isCorrect": true
      },
      { "text": "Blokowanie wywołań funkcji", "isCorrect": false },
      { "text": "Przesyłanie parametrów do funkcji", "isCorrect": false },
      { "text": "Optymalizacja zmiennych", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest destrukturyzacja w JavaScript?",
    "type": "javascript",
    "answers": [
      { "text": "Rozbijanie obiektów na zmienne", "isCorrect": true },
      { "text": "Tworzenie funkcji", "isCorrect": false },
      { "text": "Usuwanie obiektów z pamięci", "isCorrect": false },
      { "text": "Łączenie zmiennych", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest 'useState' w React?",
    "type": "react",
    "answers": [
      {
        "text": "Funkcja do zarządzania stanem komponentu",
        "isCorrect": true
      },
      {
        "text": "Metoda do obsługi cyklu życia komponentu",
        "isCorrect": false
      },
      { "text": "Zdarzenie kliknięcia w React", "isCorrect": false },
      { "text": "Funkcja renderująca komponent", "isCorrect": false }
    ]
  },
  {
    "question": "Jaką metodą można asynchronicznie pobrać dane w JavaScript?",
    "type": "javascript",
    "answers": [
      { "text": "fetch()", "isCorrect": true },
      { "text": "append()", "isCorrect": false },
      { "text": "sort()", "isCorrect": false },
      { "text": "indexOf()", "isCorrect": false }
    ]
  },
  {
    "question": "Co oznacza REST w kontekście API?",
    "type": "web",
    "answers": [
      { "text": "Representational State Transfer", "isCorrect": true },
      { "text": "Remote Event Service Transfer", "isCorrect": false },
      { "text": "Random External System Transport", "isCorrect": false },
      { "text": "Resetting Event Stream Timeout", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest JSX w React?",
    "type": "react",
    "answers": [
      {
        "text": "Rozszerzeniem składni JavaScript do opisywania UI",
        "isCorrect": true
      },
      { "text": "Funkcją React do zarządzania stanem", "isCorrect": false },
      { "text": "Mechanizmem do routingu w React", "isCorrect": false },
      { "text": "Biblioteką CSS dla React", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest middleware w Node.js?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Funkcja przetwarzająca żądania HTTP pomiędzy klientem a serwerem",
        "isCorrect": true
      },
      { "text": "Metoda do manipulacji DOM", "isCorrect": false },
      { "text": "Typ danych w Node.js", "isCorrect": false },
      {
        "text": "Framework do budowania interfejsów użytkownika",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Jakie są podstawowe metody HTTP używane w REST API?",
    "type": "web",
    "answers": [
      { "text": "GET, POST, PUT, DELETE", "isCorrect": true },
      { "text": "HEAD, OPTIONS, PATCH", "isCorrect": false },
      { "text": "GET, POST, SUBSCRIBE, UNSUBSCRIBE", "isCorrect": false },
      { "text": "TRACE, CONNECT, COPY, LOCK", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest Promise w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Obiektem reprezentującym zakończenie operacji asynchronicznej",
        "isCorrect": true
      },
      { "text": "Funkcją do renderowania komponentów", "isCorrect": false },
      { "text": "Zbiorem danych w Node.js", "isCorrect": false },
      { "text": "Mechanizmem do manipulacji DOM", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest 'component lifecycle' w React?",
    "type": "react",
    "answers": [
      {
        "text": "Etapy cyklu życia komponentu od jego stworzenia po usunięcie",
        "isCorrect": true
      },
      {
        "text": "Metoda do definiowania stylów komponentu",
        "isCorrect": false
      },
      {
        "text": "Sposób na optymalizację renderowania komponentów",
        "isCorrect": false
      },
      {
        "text": "Technika do zarządzania stanem globalnym aplikacji",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Jakie typy danych są dostępne w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "String, Number, Boolean, Object, Undefined, Null, Symbol",
        "isCorrect": true
      },
      { "text": "Text, Integer, List, Tuple", "isCorrect": false },
      { "text": "Array, Set, Map", "isCorrect": false },
      { "text": "Class, Module, Function", "isCorrect": false }
    ]
  },
  {
    "question": "Co robi metoda 'map()' w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Tworzy nową tablicę z wynikami wywołania funkcji na każdym elemencie tablicy",
        "isCorrect": true
      },
      { "text": "Filtruje elementy tablicy", "isCorrect": false },
      { "text": "Zwraca pierwszy element tablicy", "isCorrect": false },
      { "text": "Łączy elementy tablicy w jeden ciąg", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest Redux?",
    "type": "react",
    "answers": [
      {
        "text": "Biblioteka do zarządzania stanem aplikacji w React",
        "isCorrect": true
      },
      {
        "text": "Framework do budowania stron internetowych",
        "isCorrect": false
      },
      { "text": "Narzędzie do stylizacji komponentów", "isCorrect": false },
      { "text": "Biblioteka do animacji", "isCorrect": false }
    ]
  },
  {
    "question": "Jakie są różnice między let, const a var w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "let i const mają blokowy zasięg, var ma zasięg funkcji",
        "isCorrect": true
      },
      {
        "text": "var jest lepsze do użycia niż let i const",
        "isCorrect": false
      },
      { "text": "const pozwala na modyfikację, a let nie", "isCorrect": false },
      { "text": "let i var są stałe, a const jest zmienną", "isCorrect": false }
    ]
  },
  {
    "question": "Jakie są różnice między komponentem klasowym a funkcyjnym w React?",
    "type": "react",
    "answers": [
      {
        "text": "Komponenty klasowe mogą mieć stan i cykl życia, funkcyjne mogą używać hooków",
        "isCorrect": true
      },
      { "text": "Nie ma różnicy, oba są tym samym", "isCorrect": false },
      { "text": "Komponenty klasowe są wydajniejsze", "isCorrect": false },
      {
        "text": "Komponenty funkcyjne nie mogą być renderowane",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Co to jest middleware w Express?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Funkcja, która ma dostęp do żądania, odpowiedzi i następnej funkcji w cyklu żądania-odpowiedzi",
        "isCorrect": true
      },
      { "text": "Klasa do tworzenia tras", "isCorrect": false },
      { "text": "Typ danych w Node.js", "isCorrect": false },
      { "text": "Zewnętrzna biblioteka do stylizacji", "isCorrect": false }
    ]
  },
  {
    "question": "Jakie jest zastosowanie hooka 'useContext' w React?",
    "type": "react",
    "answers": [
      {
        "text": "Do dostępu do kontekstu w drzewie komponentów",
        "isCorrect": true
      },
      { "text": "Do zarządzania stanem lokalnym", "isCorrect": false },
      { "text": "Do synchronizacji z API", "isCorrect": false },
      { "text": "Do stylizacji komponentów", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest CORS w kontekście API?",
    "type": "web",
    "answers": [
      {
        "text": "Mechanizm zabezpieczeń, który pozwala na dostęp do zasobów z różnych domen",
        "isCorrect": true
      },
      { "text": "Format danych używany w API", "isCorrect": false },
      { "text": "Narzędzie do testowania API", "isCorrect": false },
      { "text": "Protokół przesyłania danych", "isCorrect": false }
    ]
  },
  {
    "question": "Jakie są różnice między 'null' a 'undefined' w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "'null' jest przypisanym brakiem wartości, a 'undefined' oznacza, że wartość nie została przypisana",
        "isCorrect": true
      },
      { "text": "'null' i 'undefined' są tym samym", "isCorrect": false },
      {
        "text": "'null' oznacza obiekt, a 'undefined' to typ prosty",
        "isCorrect": false
      },
      {
        "text": "'null' jest zawsze fałszywy, a 'undefined' zawsze prawdziwy",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Jakie są podstawowe zasady działania asynchronicznego kodu w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Kod asynchroniczny nie blokuje głównego wątku wykonania",
        "isCorrect": true
      },
      { "text": "Kod asynchroniczny jest zawsze szybszy", "isCorrect": false },
      {
        "text": "Kod asynchroniczny działa tylko z promesami",
        "isCorrect": false
      },
      {
        "text": "Kod asynchroniczny nie może zawierać funkcji zwrotnych",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Jakie są podstawowe metody cyklu życia komponentu klasowego w React?",
    "type": "react",
    "answers": [
      {
        "text": "componentDidMount, componentDidUpdate, componentWillUnmount",
        "isCorrect": true
      },
      { "text": "render, update, delete", "isCorrect": false },
      { "text": "create, modify, remove", "isCorrect": false },
      { "text": "init, run, end", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest API RESTful?",
    "type": "web",
    "answers": [
      {
        "text": "Zbiór zasad dla projektowania API, które wykorzystuje standardowe metody HTTP",
        "isCorrect": true
      },
      { "text": "Interfejs użytkownika dla aplikacji", "isCorrect": false },
      { "text": "Typ bazy danych", "isCorrect": false },
      { "text": "Format pliku danych", "isCorrect": false }
    ]
  },
  {
    "question": "Jakie są główne różnice między GET a POST w HTTP?",
    "type": "web",
    "answers": [
      {
        "text": "GET pobiera dane, a POST wysyła dane do serwera",
        "isCorrect": true
      },
      { "text": "GET może mieć ciało żądania, a POST nie", "isCorrect": false },
      { "text": "POST jest szybszy niż GET", "isCorrect": false },
      { "text": "GET nie może być używane z formularzami", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest SSR w kontekście React?",
    "type": "react",
    "answers": [
      {
        "text": "Server-Side Rendering, czyli renderowanie komponentów na serwerze przed wysłaniem do klienta",
        "isCorrect": true
      },
      {
        "text": "Single Page Rendering, czyli renderowanie jednej strony aplikacji",
        "isCorrect": false
      },
      {
        "text": "Static Site Rendering, czyli generowanie statycznych stron",
        "isCorrect": false
      },
      {
        "text": "Service-Side Response, czyli odpowiedź serwera",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Jakie są różnice między komponentem kontrolowanym a niekontrolowanym w React?",
    "type": "react",
    "answers": [
      {
        "text": "Komponent kontrolowany ma stan zarządzany przez React, niekontrolowany przez DOM",
        "isCorrect": true
      },
      { "text": "Nie ma różnicy między nimi", "isCorrect": false },
      {
        "text": "Komponent niekontrolowany jest zawsze wydajniejszy",
        "isCorrect": false
      },
      {
        "text": "Komponent kontrolowany nie może mieć stanów",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Czym jest Node.js?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Środowisko uruchomieniowe JavaScript oparte na silniku V8 Google Chrome",
        "isCorrect": true
      },
      {
        "text": "Framework do budowania aplikacji internetowych",
        "isCorrect": false
      },
      { "text": "Język programowania", "isCorrect": false },
      { "text": "Baza danych", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest promis w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Obiekt reprezentujący zakończoną lub nieudane asynchroniczne operacje",
        "isCorrect": true
      },
      { "text": "Rodzaj funkcji", "isCorrect": false },
      { "text": "Metoda do synchronizacji kodu", "isCorrect": false },
      { "text": "Zmienna globalna", "isCorrect": false }
    ]
  },
  {
    "question": "Jakie są różnice między stateless a stateful component w React?",
    "type": "react",
    "answers": [
      {
        "text": "Stateless komponenty nie mają własnego stanu, stateful mają",
        "isCorrect": true
      },
      { "text": "Nie ma różnicy, oba są tym samym", "isCorrect": false },
      { "text": "Stateless komponenty są szybsze", "isCorrect": false },
      {
        "text": "Stateful komponenty nie mogą być renderowane",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Czym jest Express?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Framework do budowania aplikacji webowych w Node.js",
        "isCorrect": true
      },
      { "text": "Baza danych", "isCorrect": false },
      { "text": "Silnik szablonów", "isCorrect": false },
      { "text": "Narzędzie do stylizacji", "isCorrect": false }
    ]
  },
  {
    "question": "Jakie są różnice między metodą 'find()' a 'filter()' w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "'find()' zwraca pierwszy element spełniający warunek, a 'filter()' zwraca tablicę wszystkich spełniających warunek",
        "isCorrect": true
      },
      {
        "text": "'filter()' zwraca pierwszy element, a 'find()' wszystkie",
        "isCorrect": false
      },
      { "text": "'find()' jest szybsze od 'filter()'", "isCorrect": false },
      { "text": "Nie ma różnicy między nimi", "isCorrect": false }
    ]
  },
  {
    "question": "Jakie są zastosowania hooka 'useEffect' w React?",
    "type": "react",
    "answers": [
      {
        "text": "Do zarządzania efektami ubocznymi, takimi jak ładowanie danych",
        "isCorrect": true
      },
      { "text": "Do renderowania komponentów", "isCorrect": false },
      { "text": "Do stylizacji komponentów", "isCorrect": false },
      { "text": "Do tworzenia kontekstu", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest obiekt 'window' w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Reprezentuje okno przeglądarki oraz globalny kontekst skryptu",
        "isCorrect": true
      },
      { "text": "Typ danych", "isCorrect": false },
      { "text": "Metoda do tworzenia okien modalnych", "isCorrect": false },
      { "text": "Framework do zarządzania aplikacjami", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest event bubbling w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Propagacja zdarzeń od elementu potomnego do rodzica",
        "isCorrect": true
      },
      { "text": "Tworzenie nowych zdarzeń", "isCorrect": false },
      { "text": "Usuwanie zdarzeń z DOM", "isCorrect": false },
      { "text": "Metoda optymalizacji kodu", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest React Fiber?",
    "type": "react",
    "answers": [
      {
        "text": "Nowy silnik pojednania (reconciliation) w React",
        "isCorrect": true
      },
      { "text": "Biblioteka do zarządzania stanem", "isCorrect": false },
      {
        "text": "Narzędzie do testowania komponentów React",
        "isCorrect": false
      },
      { "text": "Framework CSS dla React", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest stream w Node.js?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Interfejs do odczytu lub zapisu danych sekwencyjnie",
        "isCorrect": true
      },
      { "text": "Metoda do synchronizacji plików", "isCorrect": false },
      { "text": "Biblioteka do obsługi baz danych", "isCorrect": false },
      { "text": "Narzędzie do kompresji danych", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest CSS Grid?",
    "type": "css",
    "answers": [
      { "text": "Dwuwymiarowy system układu stron", "isCorrect": true },
      { "text": "Biblioteka JavaScript do animacji", "isCorrect": false },
      { "text": "Preprocesor CSS", "isCorrect": false },
      {
        "text": "Framework do tworzenia responsywnych stron",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Co to jest memoizacja w React?",
    "type": "react",
    "answers": [
      {
        "text": "Technika optymalizacji polegająca na zapamiętywaniu wyników kosztownych obliczeń",
        "isCorrect": true
      },
      { "text": "Metoda zarządzania stanem komponentu", "isCorrect": false },
      {
        "text": "Sposób na tworzenie referencji do elementów DOM",
        "isCorrect": false
      },
      { "text": "Technika renderowania warunkowego", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest WebSocket?",
    "type": "web",
    "answers": [
      {
        "text": "Protokół komunikacji dwukierunkowej w czasie rzeczywistym",
        "isCorrect": true
      },
      {
        "text": "Biblioteka do tworzenia animacji w przeglądarce",
        "isCorrect": false
      },
      { "text": "Narzędzie do debugowania JavaScript", "isCorrect": false },
      {
        "text": "Format przechowywania danych w przeglądarce",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Czym jest CSS-in-JS?",
    "type": "css",
    "answers": [
      {
        "text": "Technika pisania CSS bezpośrednio w kodzie JavaScript",
        "isCorrect": true
      },
      { "text": "Nowy standard CSS", "isCorrect": false },
      { "text": "Biblioteka do animacji CSS", "isCorrect": false },
      { "text": "Narzędzie do kompilacji CSS", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest Server-Sent Events (SSE)?",
    "type": "web",
    "answers": [
      {
        "text": "Technologia umożliwiająca serwerowi wysyłanie aktualizacji do klienta",
        "isCorrect": true
      },
      { "text": "Protokół do przesyłania plików", "isCorrect": false },
      { "text": "Metoda szyfrowania danych", "isCorrect": false },
      { "text": "Technika optymalizacji baz danych", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest Shadow DOM?",
    "type": "web",
    "answers": [
      { "text": "Mechanizm enkapsulacji DOM i CSS", "isCorrect": true },
      {
        "text": "Technika renderowania 3D w przeglądarce",
        "isCorrect": false
      },
      {
        "text": "Biblioteka do tworzenia efektów wizualnych",
        "isCorrect": false
      },
      {
        "text": "Narzędzie do testowania wydajności stron",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Co to jest GraphQL?",
    "type": "web",
    "answers": [
      {
        "text": "Język zapytań i manipulacji danymi dla API",
        "isCorrect": true
      },
      { "text": "Biblioteka do tworzenia wykresów", "isCorrect": false },
      {
        "text": "Framework do budowy aplikacji mobilnych",
        "isCorrect": false
      },
      {
        "text": "Narzędzie do analizy wydajności baz danych",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Czym jest Web Workers API?",
    "type": "web",
    "answers": [
      {
        "text": "API umożliwiające uruchamianie skryptów w tle",
        "isCorrect": true
      },
      {
        "text": "Narzędzie do zarządzania pracownikami w firmie IT",
        "isCorrect": false
      },
      {
        "text": "Framework do tworzenia aplikacji webowych",
        "isCorrect": false
      },
      { "text": "Biblioteka do obsługi formularzy", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest CSS Custom Properties (zmienne CSS)?",
    "type": "css",
    "answers": [
      {
        "text": "Mechanizm definiowania własnych zmiennych w CSS",
        "isCorrect": true
      },
      {
        "text": "Narzędzie do generowania niestandardowych stylów",
        "isCorrect": false
      },
      { "text": "Biblioteka do animacji CSS", "isCorrect": false },
      { "text": "Technika optymalizacji selektorów CSS", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest Intersection Observer API?",
    "type": "web",
    "answers": [
      {
        "text": "API do wykrywania widoczności elementów na stronie",
        "isCorrect": true
      },
      { "text": "Narzędzie do analizy ruchu na stronie", "isCorrect": false },
      {
        "text": "Biblioteka do tworzenia efektów paralaksy",
        "isCorrect": false
      },
      {
        "text": "Technika optymalizacji ładowania obrazów",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Co to jest Progressive Enhancement?",
    "type": "web",
    "answers": [
      {
        "text": "Strategia tworzenia stron internetowych, zaczynając od podstawowej funkcjonalności",
        "isCorrect": true
      },
      {
        "text": "Technika optymalizacji wydajności strony",
        "isCorrect": false
      },
      { "text": "Metoda tworzenia animacji w CSS", "isCorrect": false },
      {
        "text": "Framework do budowy aplikacji mobilnych",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Czym jest Web Components?",
    "type": "web",
    "answers": [
      {
        "text": "Zestaw technologii do tworzenia własnych, enkapsulowanych elementów HTML",
        "isCorrect": true
      },
      { "text": "Biblioteka komponentów UI", "isCorrect": false },
      {
        "text": "Narzędzie do testowania interfejsu użytkownika",
        "isCorrect": false
      },
      {
        "text": "Framework do tworzenia aplikacji jednostronnicowych",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Co to jest CSS Grid Layout?",
    "type": "css",
    "answers": [
      {
        "text": "Dwuwymiarowy system układu stron oparty na siatce",
        "isCorrect": true
      },
      { "text": "Jednowymiarowy system układu elementów", "isCorrect": false },
      { "text": "Biblioteka do animacji CSS", "isCorrect": false },
      { "text": "Preprocesor CSS", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest event delegation w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Technika obsługi zdarzeń dla wielu elementów za pomocą jednego nasłuchiwacza",
        "isCorrect": true
      },
      { "text": "Metoda tworzenia własnych zdarzeń", "isCorrect": false },
      {
        "text": "Sposób na blokowanie domyślnych akcji zdarzeń",
        "isCorrect": false
      },
      { "text": "Technika optymalizacji pętli zdarzeń", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest React.memo()?",
    "type": "react",
    "answers": [
      {
        "text": "Funkcja wyższego rzędu do optymalizacji renderowania komponentów funkcyjnych",
        "isCorrect": true
      },
      { "text": "Hook do zapamiętywania wartości", "isCorrect": false },
      { "text": "Metoda cyklu życia komponentu klasowego", "isCorrect": false },
      { "text": "Funkcja do tworzenia referencji", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest Node.js Cluster?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Moduł umożliwiający tworzenie procesów potomnych do obsługi obciążenia",
        "isCorrect": true
      },
      { "text": "System zarządzania bazami danych", "isCorrect": false },
      {
        "text": "Narzędzie do monitorowania wydajności aplikacji",
        "isCorrect": false
      },
      {
        "text": "Biblioteka do tworzenia interfejsów graficznych",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Co to jest CSS pseudo-element ::before?",
    "type": "css",
    "answers": [
      {
        "text": "Element tworzony przed zawartością wybranego elementu",
        "isCorrect": true
      },
      {
        "text": "Selektor do wybierania pierwszego dziecka",
        "isCorrect": false
      },
      {
        "text": "Właściwość określająca marginesy elementu",
        "isCorrect": false
      },
      { "text": "Metoda animacji w CSS", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest closure w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Funkcja wraz z jej leksykalnym środowiskiem",
        "isCorrect": true
      },
      {
        "text": "Metoda zamykania połączenia z bazą danych",
        "isCorrect": false
      },
      { "text": "Operator porównania obiektów", "isCorrect": false },
      { "text": "Technika optymalizacji pętli", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest React Portal?",
    "type": "react",
    "answers": [
      {
        "text": "Mechanizm renderowania komponentów poza ich domyślną hierarchią DOM",
        "isCorrect": true
      },
      { "text": "Narzędzie do tworzenia animacji przejść", "isCorrect": false },
      {
        "text": "Biblioteka do zarządzania stanem aplikacji",
        "isCorrect": false
      },
      { "text": "Komponent do tworzenia modali", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest Node.js Stream?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Interfejs do odczytu lub zapisu danych kawałek po kawałku",
        "isCorrect": true
      },
      { "text": "Metoda przesyłania plików przez sieć", "isCorrect": false },
      { "text": "Biblioteka do strumieniowania wideo", "isCorrect": false },
      { "text": "Narzędzie do kompresji danych", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest CSS Flexbox?",
    "type": "css",
    "answers": [
      {
        "text": "Jednowymiarowy system układu elementów",
        "isCorrect": true
      },
      { "text": "Technika animacji elementów", "isCorrect": false },
      {
        "text": "Metoda definiowania niestandardowych czcionek",
        "isCorrect": false
      },
      { "text": "Narzędzie do optymalizacji CSS", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest memoizacja w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Technika optymalizacji polegająca na zapamiętywaniu wyników kosztownych obliczeń",
        "isCorrect": true
      },
      { "text": "Metoda zarządzania pamięcią", "isCorrect": false },
      {
        "text": "Sposób na tworzenie prywatnych zmiennych",
        "isCorrect": false
      },
      { "text": "Technika debugowania kodu", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest React.lazy()?",
    "type": "react",
    "answers": [
      {
        "text": "Funkcja do dynamicznego importowania komponentów",
        "isCorrect": true
      },
      { "text": "Hook do opóźniania renderowania", "isCorrect": false },
      { "text": "Metoda optymalizacji renderowania list", "isCorrect": false },
      { "text": "Narzędzie do lazy loading obrazów", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest Node.js EventEmitter?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Klasa umożliwiająca obsługę i emisję zdarzeń",
        "isCorrect": true
      },
      {
        "text": "Narzędzie do debugowania asynchronicznego kodu",
        "isCorrect": false
      },
      {
        "text": "Biblioteka do tworzenia interfejsów użytkownika",
        "isCorrect": false
      },
      { "text": "Moduł do zarządzania procesami", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest CSS preprocessor?",
    "type": "css",
    "answers": [
      {
        "text": "Narzędzie rozszerzające możliwości CSS o zmienne, funkcje i inne",
        "isCorrect": true
      },
      { "text": "Program do kompresji plików CSS", "isCorrect": false },
      { "text": "Biblioteka animacji CSS", "isCorrect": false },
      {
        "text": "Framework do tworzenia responsywnych layoutów",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Czym jest prototype w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Obiekt, z którego inne obiekty dziedziczą właściwości i metody",
        "isCorrect": true
      },
      { "text": "Funkcja do tworzenia klas", "isCorrect": false },
      { "text": "Metoda kopiowania obiektów", "isCorrect": false },
      { "text": "Operator porównywania typów", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest React Context?",
    "type": "react",
    "answers": [
      {
        "text": "API do przekazywania danych przez drzewo komponentów bez props",
        "isCorrect": true
      },
      {
        "text": "Narzędzie do zarządzania stanem globalnym",
        "isCorrect": false
      },
      { "text": "Metoda optymalizacji renderowania", "isCorrect": false },
      { "text": "Biblioteka do obsługi formularzy", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest Node.js Buffer?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Klasa do pracy z danymi binarnymi",
        "isCorrect": true
      },
      {
        "text": "Narzędzie do buforowania zapytań do bazy danych",
        "isCorrect": false
      },
      { "text": "Metoda optymalizacji wydajności serwera", "isCorrect": false },
      { "text": "Biblioteka do kompresji danych", "isCorrect": false }
    ]
  },
  {
    "question": "Co to jest CSS specificity?",
    "type": "css",
    "answers": [
      {
        "text": "Algorytm określający, które style CSS powinny być zastosowane do elementu",
        "isCorrect": true
      },
      { "text": "Technika optymalizacji selektorów CSS", "isCorrect": false },
      {
        "text": "Metoda definiowania niestandardowych właściwości CSS",
        "isCorrect": false
      },
      { "text": "Narzędzie do debugowania stylów", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest currying w JavaScript?",
    "type": "javascript",
    "answers": [
      {
        "text": "Technika przekształcania funkcji wieloargumentowej w sekwencję funkcji jednoargumentowych",
        "isCorrect": true
      },
      { "text": "Metoda optymalizacji pętli", "isCorrect": false },
      { "text": "Sposób na tworzenie prywatnych metod", "isCorrect": false },
      {
        "text": "Technika debugowania kodu asynchronicznego",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Co to jest React Suspense?",
    "type": "react",
    "answers": [
      {
        "text": "Komponent do obsługi opóźnionego renderowania i ładowania danych",
        "isCorrect": true
      },
      { "text": "Hook do zarządzania stanem aplikacji", "isCorrect": false },
      { "text": "Narzędzie do testowania komponentów", "isCorrect": false },
      { "text": "Biblioteka do tworzenia animacji", "isCorrect": false }
    ]
  },
  {
    "question": "Czym jest Node.js child_process?",
    "type": "nodejs",
    "answers": [
      {
        "text": "Moduł umożliwiający tworzenie procesów potomnych",
        "isCorrect": true
      },
      { "text": "Narzędzie do zarządzania pamięcią", "isCorrect": false },
      { "text": "Biblioteka do obsługi wielowątkowości", "isCorrect": false },
      { "text": "System do zarządzania zależnościami", "isCorrect": false }
    ]
  },
  {
    "question": "Co wyświetli poniższy kod HTML?\n<p>Hello <strong>World</strong>!</p>",
    "type": "code",
    "answers": [
      { "text": "Hello World!", "isCorrect": false },
      { "text": "Hello <strong>World</strong>!", "isCorrect": false },
      {
        "text": "Hello World! (z pogrubionym słowem 'World')",
        "isCorrect": true
      },
      { "text": "<p>Hello <strong>World</strong>!</p>", "isCorrect": false }
    ]
  },
  {
    "question": "Jaki kolor będzie miał tekst po zastosowaniu poniższego CSS?\n.text { color: #FF0000; }",
    "type": "code",
    "answers": [
      { "text": "Niebieski", "isCorrect": false },
      { "text": "Zielony", "isCorrect": false },
      { "text": "Czerwony", "isCorrect": true },
      { "text": "Czarny", "isCorrect": false }
    ]
  },
  {
    "question": "Co wyświetli poniższy kod React?\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\n<Welcome name=\"Alice\" />",
    "type": "code",
    "answers": [
      { "text": "Hello, props.name", "isCorrect": false },
      { "text": "Hello, Alice", "isCorrect": true },
      { "text": "Hello, {props.name}", "isCorrect": false },
      { "text": "Error", "isCorrect": false }
    ]
  },
  {
    "question": "Jaki będzie wynik wykonania poniższego kodu JavaScript?\nconsole.log(2 + '2');",
    "type": "code",
    "answers": [
      { "text": "4", "isCorrect": false },
      { "text": "22", "isCorrect": true },
      { "text": "NaN", "isCorrect": false },
      { "text": "Error", "isCorrect": false }
    ]
  },
  {
    "question": "Co zrobi poniższy kod Node.js?\nconst fs = require('fs');\nfs.readFile('test.txt', 'utf8', (err, data) => {\n  if (err) throw err;\n  console.log(data);\n});",
    "type": "code",
    "answers": [
      { "text": "Zapisze dane do pliku test.txt", "isCorrect": false },
      {
        "text": "Odczyta zawartość pliku test.txt i wyświetli ją w konsoli",
        "isCorrect": true
      },
      { "text": "Usunie plik test.txt", "isCorrect": false },
      { "text": "Wyświetli błąd", "isCorrect": false }
    ]
  },
  {
    "question": "Jaki będzie wynik poniższego kodu JavaScript?\nlet x = 5;\nconsole.log(x++);",
    "type": "code",
    "answers": [
      { "text": "5", "isCorrect": true },
      { "text": "6", "isCorrect": false },
      { "text": "undefined", "isCorrect": false },
      { "text": "Error", "isCorrect": false }
    ]
  },
  {
    "question": "Co wyświetli poniższy kod HTML?\n<ul>\n  <li>Apple</li>\n  <li>Banana</li>\n  <li>Orange</li>\n</ul>",
    "type": "code",
    "answers": [
      { "text": "Lista numerowana z trzema owocami", "isCorrect": false },
      { "text": "Lista wypunktowana z trzema owocami", "isCorrect": true },
      { "text": "Trzy linie tekstu z nazwami owoców", "isCorrect": false },
      { "text": "Error", "isCorrect": false }
    ]
  },
  {
    "question": "Jaki będzie efekt zastosowania poniższego CSS?\n.box { margin: 10px 20px; }",
    "type": "code",
    "answers": [
      { "text": "Margines 10px z każdej strony", "isCorrect": false },
      { "text": "Margines 20px z każdej strony", "isCorrect": false },
      { "text": "Margines 10px góra/dół, 20px lewo/prawo", "isCorrect": true },
      { "text": "Margines 20px góra/dół, 10px lewo/prawo", "isCorrect": false }
    ]
  },
  {
    "question": "Co wyświetli poniższy kod React?\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <button onClick={() => setCount(count + 1)}>\n      Clicks: {count}\n    </button>\n  );\n}",
    "type": "code",
    "answers": [
      {
        "text": "Przycisk z tekstem 'Clicks: 0', który zwiększa licznik po kliknięciu",
        "isCorrect": true
      },
      {
        "text": "Przycisk z tekstem 'Clicks: ', który nie reaguje na kliknięcia",
        "isCorrect": false
      },
      { "text": "Error, brakuje importu useState", "isCorrect": false },
      { "text": "Pusty przycisk bez tekstu", "isCorrect": false }
    ]
  },
  {
    "question": "Jaki będzie wynik poniższego kodu JavaScript?\nconst arr = [1, 2, 3, 4, 5];\nconsole.log(arr.filter(num => num % 2 === 0));",
    "type": "code",
    "answers": [
      { "text": "[1, 3, 5]", "isCorrect": false },
      { "text": "[2, 4]", "isCorrect": true },
      { "text": "[1, 2, 3, 4, 5]", "isCorrect": false },
      { "text": "[]", "isCorrect": false }
    ]
  },
  {
    "question": "Co zrobi poniższy kod Node.js?\nconst http = require('http');\nhttp.createServer((req, res) => {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World');\n}).listen(8080);",
    "type": "code",
    "answers": [
      {
        "text": "Utworzy serwer HTTP nasłuchujący na porcie 8080",
        "isCorrect": true
      },
      { "text": "Wyśle żądanie HTTP do serwera", "isCorrect": false },
      { "text": "Wyświetli 'Hello World' w konsoli", "isCorrect": false },
      { "text": "Zakończy działanie serwera", "isCorrect": false }
    ]
  },
  {
    "question": "Jaki będzie wynik poniższego kodu JavaScript?\nconsole.log(typeof NaN);",
    "type": "code",
    "answers": [
      { "text": "'number'", "isCorrect": true },
      { "text": "'NaN'", "isCorrect": false },
      { "text": "'undefined'", "isCorrect": false },
      { "text": "'object'", "isCorrect": false }
    ]
  },
  {
    "question": "Co wyświetli poniższy kod HTML i CSS?\n<div class=\"box\">Hello</div>\n\n.box {\n  width: 100px;\n  height: 100px;\n  background-color: blue;\n  color: white;\n  text-align: center;\n  line-height: 100px;\n}",
    "type": "code",
    "answers": [
      {
        "text": "Niebieski kwadrat z białym tekstem 'Hello' na środku",
        "isCorrect": true
      },
      {
        "text": "Biały kwadrat z niebieskim tekstem 'Hello' na środku",
        "isCorrect": false
      },
      {
        "text": "Niebieski prostokąt z białym tekstem 'Hello' w lewym górnym rogu",
        "isCorrect": false
      },
      { "text": "Tekst 'Hello' bez żadnego tła", "isCorrect": false }
    ]
  },
  {
    "question": "Co wyświetli poniższy kod React?\nfunction App() {\n  const items = ['Apple', 'Banana', 'Orange'];\n  return (\n    <ul>\n      {items.map((item, index) => (\n        <li key={index}>{item}</li>\n      ))}\n    </ul>\n  );\n}",
    "type": "code",
    "answers": [
      { "text": "Listę wypunktowaną z trzema owocami", "isCorrect": true },
      { "text": "Listę numerowaną z trzema owocami", "isCorrect": false },
      {
        "text": "Trzy oddzielne listy, każda z jednym owocem",
        "isCorrect": false
      },
      { "text": "Error, brakuje return w funkcji map", "isCorrect": false }
    ]
  },
  {
    "question": "Jaki będzie wynik poniższego kodu JavaScript?\nconst obj = { a: 1, b: 2, c: 3 };\nconst { a, ...rest } = obj;\nconsole.log(rest);",
    "type": "code",
    "answers": [
      { "text": "{ b: 2, c: 3 }", "isCorrect": true },
      { "text": "{ a: 1 }", "isCorrect": false },
      { "text": "{ a: 1, b: 2, c: 3 }", "isCorrect": false },
      { "text": "Error", "isCorrect": false }
    ]
  }
]
